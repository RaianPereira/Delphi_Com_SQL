unit uPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, uDTMConexao, Enter, uFrmAtualizaDB, cUsuarioLogado,
  Vcl.ComCtrls, ZDbcIntfs, cAtualizacaoBancoDeDados, RLReport, Data.DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, Vcl.ExtCtrls,
  VclTee.TeeGDIPlus, VCLTee.TeEngine, VCLTee.TeeProcs, VCLTee.Chart,
  VCLTee.DBChart, VCLTee.Series, Vcl.StdCtrls, Vcl.Imaging.pngimage;

type
  TfrmPrincipal = class(TForm)
    mainPrincipal: TMainMenu;
    CADASTRO1: TMenuItem;
    MOVIMENTAO1: TMenuItem;
    RELATRIOS1: TMenuItem;
    Cliente1: TMenuItem;
    N1: TMenuItem;
    Categoria1: TMenuItem;
    Produto1: TMenuItem;
    N2: TMenuItem;
    Venda1: TMenuItem;
    Cliente2: TMenuItem;
    N3: TMenuItem;
    Produto2: TMenuItem;
    N4: TMenuItem;
    VendaporData1: TMenuItem;
    mnuFechar: TMenuItem;
    Categoria2: TMenuItem;
    N5: TMenuItem;
    N6: TMenuItem;
    FichadeCliente1: TMenuItem;
    N7: TMenuItem;
    ProdutoporCategoria1: TMenuItem;
    Usuario1: TMenuItem;
    N8: TMenuItem;
    AlterarSenha1: TMenuItem;
    StbPrincipal: TStatusBar;
    ControledeAcesso1: TMenuItem;
    N9: TMenuItem;
    ConsultaVenda1: TMenuItem;
    ConsultadeVenda1: TMenuItem;
    UsuriosVsAes1: TMenuItem;
    Panel1: TPanel;
    GridPanel1: TGridPanel;
    DBChart1: TDBChart;
    Series1: TBarSeries;
    DBChart2: TDBChart;
    Series2: TPieSeries;
    DBChart3: TDBChart;
    PieSeries1: TPieSeries;
    DBChart4: TDBChart;
    Series3: TFastLineSeries;
    Label1: TLabel;
    tmrAtualizacaoDashBoard: TTimer;
    Panel2: TPanel;
    Image1: TImage;
    procedure mnuFecharClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Categoria1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Cliente1Click(Sender: TObject);
    procedure Produto1Click(Sender: TObject);
    procedure Venda1Click(Sender: TObject);
    procedure Categoria2Click(Sender: TObject);
    procedure Cliente2Click(Sender: TObject);
    procedure FichadeCliente1Click(Sender: TObject);
    procedure Produto2Click(Sender: TObject);
    procedure ProdutoporCategoria1Click(Sender: TObject);
    procedure VendaporData1Click(Sender: TObject);
    procedure Usuario1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure AlterarSenha1Click(Sender: TObject);
    procedure ControledeAcesso1Click(Sender: TObject);
    procedure ConsultadeVenda1Click(Sender: TObject);
    procedure UsuriosVsAes1Click(Sender: TObject);
    procedure Panel1DblClick(Sender: TObject);
    procedure tmrAtualizacaoDashBoardTimer(Sender: TObject);
    procedure Panel2Click(Sender: TObject);
    procedure Image1Click(Sender: TObject);
  private
    { Private declarations }
    TeclaEnter : TMREnter;
    procedure AtualizacaoBancoDados(aForm: TfrmAtualizaDB);
    procedure CriarForm(aNomeForm: TFormClass);
    procedure CriarRelatorio(aNomeForm: TFormClass);
    procedure AtualizarDashBoard;
  public
    { Public declarations }
  end;

var
  frmPrincipal: TfrmPrincipal;
  oUsuarioLogado: TUsuarioLogado;

implementation

{$R *.dfm}

uses uCadCategoria, uCadCliente, uCadProduto, uProVenda, uRelCategoria,
  uRelCadCliente, uRelCadClienteFicha, uRelCadProduto,
  uRelCadProdutoComGrupoCategoria, uSelecionarData, uRelVendaPorData,
  uCadUsuario, uLogin, uAlterarSenha, cArquivoIni, uCadAcaoAcesso, cAcaoAcesso, uConsultaVenda, uUsuarioVsAcoes,
  uTelaHeranca, uDTMGrafico;



procedure TfrmPrincipal.Categoria1Click(Sender: TObject);
begin
   CriarForm(TfrmCadCategoria);
end;

procedure TfrmPrincipal.Categoria2Click(Sender: TObject);
begin
  CriarRelatorio(TfrmRelCategoria);
end;

procedure TfrmPrincipal.Cliente1Click(Sender: TObject);
begin
  CriarForm(TfrmCadCliente);
end;

procedure TfrmPrincipal.Cliente2Click(Sender: TObject);
begin
   CriarRelatorio(TfrmRelCadCliente);
end;

procedure TfrmPrincipal.ConsultadeVenda1Click(Sender: TObject);
begin
  CriarForm(TfrmConsultaVenda);
end;

procedure TfrmPrincipal.ControledeAcesso1Click(Sender: TObject);
begin
  CriarForm(TfrmCadAcaoAcesso);
end;

procedure TfrmPrincipal.FichadeCliente1Click(Sender: TObject);
begin
  CriarRelatorio(TfrmRelCadClienteFicha);
end;

procedure TfrmPrincipal.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   FreeAndNil (TeclaEnter);
   FreeAndNil (dtmPrincipal);
   FreeAndNil (DTMGrafico);

   if Assigned(oUsuarioLogado) then
      FreeAndNil(oUsuarioLogado);
end;

procedure TfrmPrincipal.FormCreate(Sender: TObject);
begin
  if not FileExists(TArquivoIni.ArquivoIni) then
  begin
    TArquivoIni.AtualizarIni('SERVER', 'TipoDataBase', 'MSSQL');
    TArquivoIni.AtualizarIni('SERVER', 'HostName', '.\');
    TArquivoIni.AtualizarIni('SERVER', 'Port', '1433');
    TArquivoIni.AtualizarIni('SERVER', 'User', 'sa');
    TArquivoIni.AtualizarIni('SERVER', 'Password', 'admin12345');
    TArquivoIni.AtualizarIni('SERVER', 'Database', 'Vendas');

    MessageDlg('Arquivo '+ TArquivoIni.ArquivoIni + ' Criado com Sucesso'+ #13+
               'Configure o arquivo antes de inicializar a aplicação', mtInformation, [mbOk],0);
    Application.Terminate;
  end
  else
  begin
  frmAtualizaDB:=TfrmAtualizaDB.Create(self);
  frmAtualizaDB.Show;
  frmAtualizaDB.Refresh;

  dtmPrincipal := TdtmPrincipal.Create(Self);
  with dtmPrincipal.ConexaoDB do
   begin
    SQLHourGlass := False;
    if TArquivoIni.LerIni('SERVER', 'TipoDataBase')='MSSQL' then
        Protocol := 'mssql';
    LibraryLocation:= 'C:\Users\Raian Almeida\Documents\Programa 2023\ntwdblib.dll';
    HostName := TArquivoIni.LerIni('SERVER','HostName');
    Port := StrToInt(TArquivoIni.LerIni('SERVER','Port'));
    User := TArquivoIni.LerIni('SERVER','User');
    Password := TArquivoIni.LerIni('SERVER','Password');
    Database := TArquivoIni.LerIni('SERVER','DataBase');
    AutoCommit := True;
    TransactIsolationLevel := tiReadCommitted;
    Connected := True;
  end;
  AtualizacaoBancoDados(frmAtualizaDB);

  TAcaoAcesso.CriarAcoes(TfrmCadCategoria, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmCadCliente, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmCadProduto, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmCadUsuario, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmCadAcaoAcesso, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmAlterarSenha, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmProVenda, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmRelVendaPorData, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmRelCadClienteFicha, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmRelCadCliente, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmRelCadProdutoComGrupoCategoria, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmRelCadProduto, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmRelCategoria, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmUsuarioVsAcoes, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmConsultaVenda, DtmPrincipal.ConexaoDB);
  TAcaoAcesso.CriarAcoes(TfrmSelecionarData, DtmPrincipal.ConexaoDB);

  TAcaoAcesso.PreencherUsuariosVsAcoes(DtmPrincipal.ConexaoDB);

  DTMGrafico:=TDTMGrafico.Create(Self);
  AtualizarDashBoard;

  frmAtualizaDB.Free;

  TeclaEnter := TMREnter.Create(Self);
  TeclaEnter.FocusEnabled := True;
  TeclaEnter.FocusColor := clInfoBK;
  end;
end;

procedure TfrmPrincipal.FormShow(Sender: TObject);
begin
  try
    oUsuarioLogado := TUsuarioLogado.Create;

    frmLogin := TfrmLogin.Create(Self);
    frmLogin.ShowModal;
  finally
    frmLogin.Release;
    StbPrincipal.Panels[0].Text:='USUÁRIO: '+oUsuarioLogado.nome;
  end;

end;

procedure TfrmPrincipal.Image1Click(Sender: TObject);
begin
  AtualizarDashBoard;
end;

procedure TfrmPrincipal.mnuFecharClick(Sender: TObject);
begin
   Application.Terminate;
end;

procedure TfrmPrincipal.Panel1DblClick(Sender: TObject);
begin
   AtualizarDashBoard;
end;

procedure TfrmPrincipal.Panel2Click(Sender: TObject);
begin
  AtualizarDashBoard;
end;

procedure TfrmPrincipal.Produto1Click(Sender: TObject);
begin
  CriarForm(TfrmCadProduto);
end;

procedure TfrmPrincipal.Produto2Click(Sender: TObject);
begin
   CriarRelatorio(TfrmRelCadProduto);
end;

procedure TfrmPrincipal.ProdutoporCategoria1Click(Sender: TObject);
begin
   CriarRelatorio(TfrmRelCadProdutoComGrupoCategoria);
end;

procedure TfrmPrincipal.tmrAtualizacaoDashBoardTimer(Sender: TObject);
begin
  AtualizarDashBoard;
end;

procedure TfrmPrincipal.Usuario1Click(Sender: TObject);
begin
  CriarForm(TfrmCadUsuario);
end;

procedure TfrmPrincipal.UsuriosVsAes1Click(Sender: TObject);
begin
  CriarForm(TfrmUsuarioVsAcoes);
end;

procedure TfrmPrincipal.Venda1Click(Sender: TObject);
begin
  CriarForm(TfrmProVenda);
end;

procedure TfrmPrincipal.VendaporData1Click(Sender: TObject);
begin
  try
    frmSelecionarData:=TfrmSelecionarData.Create(Self);
    if TUsuarioLogado.TenhoAcesso(oUsuarioLogado.codigo, frmSelecionarData.Name, DtmPrincipal.ConexaoDB) then
    begin
    frmSelecionarData.ShowModal;

    frmRelVendaPorData:=TfrmRelVendaPorData.Create(Self);
    frmRelVendaPorData.QryVendas.Close;
    frmRelVendaPorData.QryVendas.ParamByName('DataInicio').AsDate:=frmSelecionarData.EdtDataInicio.Date;
    frmRelVendaPorData.QryVendas.ParamByName('DataFim').AsDate:=frmSelecionarData.EdtDataFinal.Date;
    frmRelVendaPorData.QryVendas.Open;
    frmRelVendaPorData.Relatorio.PreviewModal;
    end
    else
    begin
      MessageDlg('Usuário: '+oUsuarioLogado.nome +' , não tem essa permissão', mtWarning,[mbOk],0);
    end;
  finally
    if Assigned(frmSelecionarData) then
      frmSelecionarData.Release;
    if Assigned(frmRelVendaPorData) then
      FreeAndNil(frmRelVendaPorData);
  end;

end;

procedure TfrmPrincipal.AlterarSenha1Click(Sender: TObject);
begin
  CriarForm(TfrmAlterarSenha);
end;

procedure TfrmPrincipal.AtualizacaoBancoDados(aForm:TfrmAtualizaDB);
var oAtualizarMSSQL:TAtualizaBancoDadosMSSQL;
begin
  aForm.Refresh;

  try
    oAtualizarMSSQL:=TAtualizaBancoDadosMSSQL.Create(DtmPrincipal.ConexaoDB);
    oAtualizarMSSQL.AtualizarBancoDadosMSSQL;
  finally
    if Assigned(oAtualizarMSSQL) then
       FreeAndNil(oAtualizarMSSQL);
  end;
end;

procedure TfrmPrincipal.CriarForm(aNomeForm: TFormClass);
var form:TForm;
begin
  try
    tmrAtualizacaoDashBoard.Enabled:=false;
    form := aNomeForm.Create(Application);
    if TUsuarioLogado.TenhoAcesso(oUsuarioLogado.codigo, form.Name, DtmPrincipal.Conexaodb) then
    begin
      form.ShowModal;
    end
    else
    begin
       MessageDlg('Usuário: '+oUsuarioLogado.nome +' Não tem essa permissão', mtWarning,[mbOk], 0);
    end;
  finally
    if Assigned(form) then
       FreeAndNil(form);
    AtualizarDashBoard;
    tmrAtualizacaoDashBoard.Enabled:=true;
  end;
end;

procedure TfrmPrincipal.CriarRelatorio(aNomeForm:TFormClass);
var form: TForm;
    aRelatorio: TRLReport;
    i: integer;
begin
  try
    tmrAtualizacaoDashBoard.Enabled:=false;
    form := aNomeForm.Create(Application);
    if TUsuarioLogado.TenhoAcesso(oUsuarioLogado.codigo, form.Name, DtmPrincipal.ConexaoDB) then
    begin
       for i := 0 to form.ComponentCount-1 do
       begin
         if form.Components[i] is TRLReport then
          begin
            TRLReport(form.Components[i]).PreviewModal;
            Break;
          end;
        end;
    end
    else
    begin
      MessageDlg('Usuário: '+oUsuarioLogado.nome +' Não tem essa permissão', mtWarning,[mbOk], 0);
    end;
  finally
     if Assigned(form) then
        form.Release;
     tmrAtualizacaoDashBoard.Enabled:=true;
  end;
end;

procedure TfrmPrincipal.AtualizarDashBoard;
begin
  try
    Screen.Cursor:=crSQLWait;
    if  DTMGrafico.QryProdutoEstoque.Active then
        DTMGrafico.QryProdutoEstoque.Close;
    if  DTMGrafico.QryValorVendaPorCliente.Active then
        DTMGrafico.QryValorVendaPorCliente.Close;
    if  DTMGrafico.Qry10ProdutosMaisVendidos.Active then
        DTMGrafico.Qry10ProdutosMaisVendidos.Close;
    if  DTMGrafico.QryVendasUltimaSemana.Active then
        DTMGrafico.QryVendasUltimaSemana.Close;

  DTMGrafico.QryProdutoEstoque.Open;
  DTMGrafico.QryValorVendaPorCliente.Open;
  DTMGrafico.Qry10ProdutosMaisVendidos.Open;
  DTMGrafico.QryVendasUltimaSemana.Open;
  finally
    Screen.Cursor:=crDefault;
  end;
end;

end.
